name: Build and Package Shared Resources

on:
  push:
    branches:
      - '**'

jobs:
  build-and-deploy:
    #if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write
      actions: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Determine version bump from all commits in PR merge
        id: determine_bump
        run: |
          COMMITS=$(git log ${{ github.event.before }}..${{ github.sha }} --pretty=format:"%s")
          echo "Analyzing commit messages:"
          echo "$COMMITS"

          bump="none"

          # Check for major (breaking changes)
          if echo "$COMMITS" | grep -qE "^(feat|fix|perf|refactor|chore|ci|docs|style|test)!:"; then
            bump="major"
          # Check for minor (new features)
          elif echo "$COMMITS" | grep -qE "^feat(\(.+\))?: "; then
            bump="minor"
          # Check for patch (fixes and other safe changes)
          elif echo "$COMMITS" | grep -qE "^(fix|perf|refactor|chore|ci|docs|style|test)(\(.+\))?: "; then
            bump="patch"
          else
            echo "No relevant commit prefix found; defaulting to 'patch'"
            bump="patch"
          fi

          echo "Determined bump level: $bump"
          echo "bump=$bump" >> $GITHUB_OUTPUT

      - name: Bump version in version tags
        id: bump_version
        run: |
          sudo apt-get update && sudo apt-get install -y libxml2-utils
          
          CURRENT_VERSION=$(xmllint --xpath "/*[local-name()='project']/*[local-name()='version']/text()" pom.xml)
          echo "Current version: $CURRENT_VERSION"
          
          IFS='.' read -r MAJOR MINOR PATCH <<< "$(echo "$CURRENT_VERSION" | sed 's/-SNAPSHOT//')"
          BUMP=${{ steps.determine_bump.outputs.bump }}
          
          if [ "$BUMP" = "major" ]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [ "$BUMP" = "minor" ]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          elif [ "$BUMP" = "patch" ]; then
            PATCH=$((PATCH + 1))
          fi
          
          NEW_VERSION="$MAJOR.$MINOR.$PATCH"
          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Update root <version>
          sed -i "0,/<version>$CURRENT_VERSION<\/version>/s//<version>$NEW_VERSION<\/version>/" pom.xml

      - name: Deploy to GitHub Package with new version
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn deploy -DskipTests



      - name: Commit and Push Version Bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add pom.xml
          git commit -m "chore: bump version to ${{ steps.bump_version.outputs.version }}" || echo "No changes to commit"
          git push